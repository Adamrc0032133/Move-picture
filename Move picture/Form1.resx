<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>